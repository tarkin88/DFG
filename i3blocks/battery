#!/usr/bin/perl
#
# Copyright 2014 Pierre Mavro <deimos@deimos.fr>
# Copyright 2014 Vivien Didelot <vivien@didelot.org>
#
# Licensed under the terms of the GNU GPL v3, or any later version.
#
# This script is meant to use with i3blocks. It parses the output of the "acpi"
# command (often provided by a package of the same name) to read the status of
# the battery, and eventually its remaining time (to full charge or discharge).
#
# The color will gradually change for a percentage below 85%, and the urgency
# (exit code 33) is set if there is less that 5% remaining.

use strict;
use warnings;
use utf8;
use POSIX;

my $acpi;
my $status;
my $extpercent;
my $intpercent;
my $percent;
my $full_text;
my $short_text;
my $extmult;
my $intmult;

$extmult=.75;
$intmult=.25;

# read the first line of the "acpi" command output
open (ACPI, 'acpi -b |') or die "Can't exec acpi: $!\n";
$acpi = <ACPI>;
close(ACPI);
# fail on unexpected output
if ($acpi !~ /: (\w+), (\d+)%/) {
	die "$acpi\n";
}
#these are for the external battery (only if its plugged in)
$status = $1;
$extpercent = $2;

#lazy way of enabling dual battery support
#this switches battery data if the first one dies
open (ACPI, 'acpi -b | grep "Battery 1" |') or die "Can't exec acpi: $!\n";
$acpi = <ACPI>;
close(ACPI);
if ($acpi !~ /: (\w+), (\d+)%/) {
	die "$acpi\n";
}
if ($status eq 'Unknown') { $status = $1; } #if external status doesn't show (dead) use internal status
$intpercent = $2;

#multipliers to allow both batteries to be put into one percentage
$intpercent *= $intmult;
$extpercent *= $extmult;
$percent = floor($intpercent + $extpercent + .5);

#shows when fully charged (usually shows "int battery at ~95%") helps avoid clutter
if ($percent > 90 && $status ne 'Discharging') {
        $full_text= '  Charged';         
        $short_text = $full_text;
        print "$full_text\n";
        print "$short_text\n";
        print "#A8FF00\n";
        exit 0;
}

#icon for charging/discharge or if battery is really low or full and to identify which battery
if ($percent < 20) {
	$full_text = ' ';
} elsif ($percent < 40) {
	$full_text = ' ';
} elsif ($percent < 60) {
	$full_text = ' ';
} elsif ($percent < 80) {
	$full_text = ' ';
} elsif ($percent < 100) {
	$full_text = ' ';
} 

#adds the percent of battery
$full_text .= " $percent%";

$short_text = $full_text;

# print text
print "$full_text\n";
print "$short_text\n";

#add coloring to output
if ($status eq 'Charging') {print "#FFFF00\n";} #for charging
elsif ($percent < 10) {print "#FF0000\n";}

exit(0);
